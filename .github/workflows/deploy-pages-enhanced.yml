name: Deploy to GitHub Pages (Enhanced)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_VERSION: '18.x'

jobs:
  # Check if Pages is enabled
  check-pages:
    runs-on: ubuntu-latest
    outputs:
      pages-enabled: ${{ steps.check.outputs.enabled }}
    steps:
    - name: Check Pages Status
      id: check
      run: |
        echo "Checking if GitHub Pages is configured..."
        echo "enabled=true" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: check-pages
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Dependencies
      run: |
        cd frontend
        npm ci --only=production

    - name: Create Production Environment
      run: |
        cd frontend
        echo "REACT_APP_API_URL=https://school-management-backend.railway.app/api" > .env.production
        echo "GENERATE_SOURCEMAP=false" >> .env.production
        echo "PUBLIC_URL=." >> .env.production

    - name: Build Application
      run: |
        cd frontend
        CI=false npm run build

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v4
      with:
        enablement: true
        token: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

    - name: Fallback Pages Setup
      if: steps.pages.outcome == 'failure'
      run: |
        echo "‚ö†Ô∏è Automatic Pages setup failed. Manual configuration required."
        echo "Please enable GitHub Pages in repository settings:"
        echo "1. Go to Settings ‚Üí Pages"
        echo "2. Select 'GitHub Actions' as source"
        echo "3. Re-run this workflow"

    - name: Upload Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: frontend/build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: success()
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    
    steps:
    - name: Deployment Status
      run: |
        echo "üöÄ GitHub Pages Deployment Report"
        echo "================================="
        echo "Build Status: ${{ needs.build.result }}"
        echo "Deploy Status: ${{ needs.deploy.result }}"
        echo ""
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "‚úÖ Frontend deployed successfully to GitHub Pages!"
          echo "üåê Your site should be available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
        else
          echo "‚ùå Deployment failed. Check the logs above."
          echo ""
          echo "Common solutions:"
          echo "1. Enable GitHub Pages in repository settings"
          echo "2. Ensure repository is public or has GitHub Pro+"
          echo "3. Check workflow permissions in repository settings"
        fi
        echo ""
        echo "üìã Next steps:"
        echo "1. Deploy backend to Railway/Render/Heroku"
        echo "2. Update REACT_APP_API_URL in this workflow"
        echo "3. Test the full application"
