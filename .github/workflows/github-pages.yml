name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_VERSION: '18.x'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Dependencies
      run: |
        cd frontend
        npm ci

    - name: Create Production Environment
      run: |
        cd frontend
        echo "REACT_APP_API_URL=https://your-backend-url.railway.app/api" > .env.production
        echo "GENERATE_SOURCEMAP=false" >> .env.production

    - name: Build Application
      run: |
        cd frontend
        npm run build

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: frontend/build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    
    steps:
    - name: Deployment Status
      run: |
        echo "üöÄ GitHub Pages Deployment"
        echo "=========================="
        echo "Status: ${{ needs.deploy.result }}"
        echo "Frontend deployed successfully!"
        echo ""
        echo "‚ö†Ô∏è Don't forget to:"
        echo "1. Deploy backend to Railway/Render"
        echo "2. Update REACT_APP_API_URL in workflow"
        echo "3. Enable GitHub Pages in repository settings"
